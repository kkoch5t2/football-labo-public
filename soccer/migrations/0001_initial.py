# Generated by Django 3.2.10 on 2022-12-20 14:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '地域（選手）',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClubComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('ovr', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='総合評価')),
                ('attack', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='攻撃力')),
                ('defense', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='守備力')),
                ('manager', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='監督・コーチ')),
                ('front', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='フロント')),
                ('development', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='育成')),
                ('text', models.TextField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_ip_address', models.GenericIPAddressField(default=0)),
                ('like', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'コメント（クラブ詳細）',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('ovr', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='総合評価')),
                ('shoot', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='シュート')),
                ('dribble', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='ドリブル')),
                ('pas', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='パス')),
                ('defense', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='守備力')),
                ('physical', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='フィジカル')),
                ('speed', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='スピード')),
                ('text', models.TextField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_ip_address', models.GenericIPAddressField(default=0)),
                ('like', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'コメント（選手）',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=150)),
                ('subject', models.CharField(max_length=150)),
                ('inquiry_details', models.TextField(max_length=1000)),
            ],
            options={
                'verbose_name_plural': 'お問い合わせ',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('flag', models.TextField(blank=True, null=True)),
                ('capital', models.CharField(max_length=100)),
                ('association', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.area')),
            ],
            options={
                'verbose_name_plural': '国籍（選手）',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('flag', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'リーグ（選手）',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('birthday', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '監督',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManagerArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '地域（監督）',
            },
        ),
        migrations.CreateModel(
            name='ManagerComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('ovr', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='総合評価')),
                ('attack', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='攻撃戦術')),
                ('defense', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='守備戦術')),
                ('achievement', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='実績')),
                ('management', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='マネジメント')),
                ('development', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='育成')),
                ('political', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='政治力')),
                ('text', models.TextField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_ip_address', models.GenericIPAddressField(default=0)),
                ('like', models.IntegerField(default=0)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_comments', to='soccer.manager')),
            ],
            options={
                'verbose_name_plural': 'コメント（監督）',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ManagerLeagueArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('flag', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'リーグ・地域（監督）',
            },
        ),
        migrations.CreateModel(
            name='ManagerTeamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'チームタイプ（監督）',
            },
        ),
        migrations.CreateModel(
            name='NationalComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('ovr', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='総合評価')),
                ('attack', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='攻撃力')),
                ('defense', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='守備力')),
                ('manager', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='監督・コーチ')),
                ('association', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='協会・連盟')),
                ('development', models.PositiveSmallIntegerField(choices=[(1, ' 1（最悪）'), (2, ' 2（悪い）'), (3, ' 3（少し悪い）'), (4, ' 4（普通）'), (5, ' 5（やや良い）'), (6, ' 6（良い）'), (7, ' 7（最高）')], default=4, null=True, verbose_name='育成')),
                ('text', models.TextField(max_length=700)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_ip_address', models.GenericIPAddressField(default=0)),
                ('like', models.IntegerField(default=0)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='national_comments', to='soccer.country')),
            ],
            options={
                'verbose_name_plural': 'コメント（ナショナル詳細）',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_player', models.CharField(max_length=150)),
                ('league', models.CharField(max_length=150)),
                ('team', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'リクエスト（選手・監督）',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('year_established', models.CharField(max_length=100)),
                ('home_town', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='team_logo/')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.league')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.manager')),
                ('manager_league_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.managerleaguearea')),
                ('manager_team_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteamtype')),
            ],
            options={
                'verbose_name_plural': 'チーム（選手）',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('birthday', models.CharField(default='', max_length=100)),
                ('height', models.CharField(default='', max_length=100)),
                ('foot', models.CharField(default='', max_length=100)),
                ('main_position', models.CharField(choices=[('GK', 'GK（ゴールキーパー）'), ('CB', 'CB（センターバック）'), ('LB', 'LB（レフトバック）'), ('RB', 'RB（ライトバック）'), ('DM', 'DM（ディフェンシブミットフィルダー）'), ('LWB', 'LWB（レフトウイングバック）'), ('RWB', 'RWB（ライトウイングバック）'), ('CM', 'CM（セントラルミットフィルダー）'), ('AM', 'AM（アタッキングミットフィルダー）'), ('LM', 'LM（レフトミットフィルダー）'), ('RM', 'RM（ライトミットフィルダー）'), ('SS', 'SS（セカンドストライカー）'), ('LW', 'LW（レフトウインガー）'), ('RW', 'RW（ライトウインガー）'), ('CF', 'CF（センターフォワード）')], max_length=100)),
                ('second_position', models.CharField(blank=True, choices=[('GK', 'GK（ゴールキーパー）'), ('CB', 'CB（センターバック）'), ('LB', 'LB（レフトバック）'), ('RB', 'RB（ライトバック）'), ('DM', 'DM（ディフェンシブミットフィルダー）'), ('LWB', 'LWB（レフトウイングバック）'), ('RWB', 'RWB（ライトウイングバック）'), ('CM', 'CM（セントラルミットフィルダー）'), ('AM', 'AM（アタッキングミットフィルダー）'), ('LM', 'LM（レフトミットフィルダー）'), ('RM', 'RM（ライトミットフィルダー）'), ('SS', 'SS（セカンドストライカー）'), ('LW', 'LW（レフトウインガー）'), ('RW', 'RW（ライトウインガー）'), ('CF', 'CF（センターフォワード）')], max_length=100, null=True)),
                ('third_position', models.CharField(blank=True, choices=[('GK', 'GK（ゴールキーパー）'), ('CB', 'CB（センターバック）'), ('LB', 'LB（レフトバック）'), ('RB', 'RB（ライトバック）'), ('DM', 'DM（ディフェンシブミットフィルダー）'), ('LWB', 'LWB（レフトウイングバック）'), ('RWB', 'RWB（ライトウイングバック）'), ('CM', 'CM（セントラルミットフィルダー）'), ('AM', 'AM（アタッキングミットフィルダー）'), ('LM', 'LM（レフトミットフィルダー）'), ('RM', 'RM（ライトミットフィルダー）'), ('SS', 'SS（セカンドストライカー）'), ('LW', 'LW（レフトウインガー）'), ('RW', 'RW（ライトウインガー）'), ('CF', 'CF（センターフォワード）')], max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.area')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.country')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.league')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.team')),
            ],
            options={
                'verbose_name_plural': '選手',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NationalCommentLikeIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('national_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.nationalcomment')),
            ],
            options={
                'verbose_name_plural': 'いいね・IPアドレス（ナショナル詳細）',
            },
        ),
        migrations.CreateModel(
            name='ManagerTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('flag', models.TextField(blank=True, null=True)),
                ('manager_league_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerleaguearea')),
                ('manager_team_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteamtype')),
            ],
            options={
                'verbose_name_plural': 'チーム（監督）',
            },
        ),
        migrations.CreateModel(
            name='ManagerLikeIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('manager_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managercomment')),
            ],
            options={
                'verbose_name_plural': 'いいね・IPアドレス（監督）',
            },
        ),
        migrations.AddField(
            model_name='managerleaguearea',
            name='manager_team_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteamtype'),
        ),
        migrations.CreateModel(
            name='ManagerCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('flag', models.TextField(blank=True, null=True)),
                ('manager_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerarea')),
            ],
            options={
                'verbose_name_plural': '国籍（監督）',
            },
        ),
        migrations.AddField(
            model_name='manager',
            name='manager_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerarea'),
        ),
        migrations.AddField(
            model_name='manager',
            name='manager_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managercountry'),
        ),
        migrations.AddField(
            model_name='manager',
            name='manager_league_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerleaguearea'),
        ),
        migrations.AddField(
            model_name='manager',
            name='manager_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteam'),
        ),
        migrations.AddField(
            model_name='manager',
            name='manager_team_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteamtype'),
        ),
        migrations.CreateModel(
            name='LikeIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('player_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.comment')),
            ],
            options={
                'verbose_name_plural': 'いいね・IPアドレス（選手）',
            },
        ),
        migrations.AddField(
            model_name='country',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.manager'),
        ),
        migrations.AddField(
            model_name='country',
            name='manager_league_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.managerleaguearea'),
        ),
        migrations.AddField(
            model_name='country',
            name='manager_team_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soccer.managerteamtype'),
        ),
        migrations.AddField(
            model_name='comment',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='soccer.player'),
        ),
        migrations.CreateModel(
            name='ClubCommentLikeIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('club_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soccer.clubcomment')),
            ],
            options={
                'verbose_name_plural': 'いいね・IPアドレス（クラブ詳細）',
            },
        ),
        migrations.AddField(
            model_name='clubcomment',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_comments', to='soccer.team'),
        ),
    ]
